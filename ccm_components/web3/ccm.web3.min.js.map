{"version":3,"file":"ccm.web3.min.js","sources":["ccm.web3.js"],"sourcesContent":["/**\n * @component ccm-web3\n * @author René Müller <rene.mueller@smail.inf.h-brs.de> 2019\n * @license MIT License\n * @version 1.0.0\n */\n\n//TODO documentation\n\n\"use strict\";\n\n( () => {\n\n    const component = {\n\n        name: 'web3',\n\n        ccm: 'https://ccmjs.github.io/ccm/versions/ccm-18.6.8.min.js',\n\n        config: {\n            Web3: ['ccm.load', 'https://cdn.jsdelivr.net/gh/ethereum/web3.js/dist/web3.min.js'],\n            units: ['wei', 'Gwei', 'Kwei', 'Mwei', 'nanoether', 'microether', 'milliether', 'ether']\n        },\n\n        Instance: function () {\n\n            /* Lifecycle */\n\n            this.init   = async () => this.web3 = new Web3();\n            this.ready  = async () => {};\n            this.start  = async () => {};\n\n\n            /* Functions */\n\n            this.version = {\n                api: () => {\n                    return this.web3.version.api;\n                },\n                node: async () => {\n                    //return this.web3.version.node;\n                    return new Promise((resolve, reject) => {\n                        this.web3.version.getNode((error, result) => resolve(result));\n                    });\n                },\n                network: () => {\n                    //return this.web3.version.network;\n                    return new Promise((resolve, reject) => {\n                        this.web3.version.getNetwork((error, result) => resolve(result));\n                    });\n                },\n                ethereum: () => {\n                    //return this.web3.version.ethereum;\n                    return new Promise((resolve, reject) => {\n                        this.web3.version.getEthereum((error, result) => resolve(result));\n                    });\n                },\n                whisper: () => {\n                    //return this.web3.version.whisper;\n                    return new Promise((resolve, reject) => {\n                        this.web3.version.getWhisper((error, result) => resolve(result));\n                    });\n                }\n            };\n\n            this.net = {\n                isListening: () => {\n                    //return this.web3.net.listening;\n                    return new Promise((resolve, reject) => {\n                        this.web3.net.getListening((error, result) => resolve(result));\n                    });\n                },\n                peerCount: () => {\n                    //return this.web3.net.peerCount;\n                    return new Promise((resolve, reject) => {\n                        this.web3.net.getPeerCount((error, result) => resolve(result));\n                    });\n                }\n            };\n\n            this.eth = {\n                defaultAccount: () => {\n                    return this.web3.eth.defaultAccount;\n                },\n                coinbase: () => {\n                    //return this.web3.eth.coinbase;\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getCoinbase((error, result) => resolve(result));\n                    });\n                },\n                isMining: () => {\n                    //return this.web3.eth.mining;\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getMining((error, result) => resolve(result));\n                    });\n                },\n                hashrate: () => {\n                    //return this.web3.eth.hashrate;\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getHashrate((error, result) => resolve(result));\n                    });\n                },\n                gasPrice: () => {\n                    //return this.web3.eth.gasPrice;\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getGasPrice((error, result) => resolve(result));\n                    });\n                },\n                accounts: () => {\n                    //return this.web3.eth.accounts;\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getAccounts((error, result) => resolve(result));\n                    });\n                },\n                blockNumber: () => {\n                    //return this.web3.eth.blockNumber;\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getBlockNumber((error, result) => resolve(result));\n                    });\n                },\n                getBalance: (address) => {\n                    //return this.web3.eth.getBalance(address);\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getBalance(address, (error, result) => resolve(result));\n                    });\n                },\n                getBlock: (blockHashOrNumber, transactionObjects = false) => {\n                    //return this.web3.eth.getBlock(blockHashOrNumber);\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getBlock(blockHashOrNumber, transactionObjects, (error, result) => resolve(result));\n                    });\n                },\n                getBlockTransactionCount: (blockHashOrNumber) => {\n                    //return this.web3.eth.getBlockTransactionCount(blockHashOrNumber);\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getBlockTransactionCount(blockHashOrNumber, (error, result) => resolve(result));\n                    });\n                },\n                getTransaction: (transactionHash) => {\n                    //return this.web3.eth.getTransaction(transactionHash);\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getTransaction(transactionHash, (error, result) => resolve(result));\n                    });\n                },\n                getTransactionReceipt: (hashString) => {\n                    //return this.web3.eth.getTransactionReceipt(hashString);\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getTransactionReceipt(hashString, (error, result) => resolve(result));\n                    });\n                },\n                getTransactionCount: (addressHexString) => {\n                    //return this.web3.eth.getTransactionCount(addressHexString);\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.getTransactionCount(addressHexString, (error, result) => resolve(result));\n                    });\n                },\n                sendTransaction: (from, to, value, data = \"\") => {\n                    //return this.web3.eth.getTransactionCount(addressHexString);\n                    return new Promise((resolve, reject) => {\n                        this.web3.eth.sendTransaction({\n                            from: from,\n                            to: to,\n                            value: value,\n                            data: data\n                        }, (error, result) => resolve(result));\n                    });\n                }\n\n                // web3.eth.defaultBlock\n                // web3.eth.syncing\n                // web3.eth.isSyncing(callback)\n                // web3.eth.getStorageAt\n                // web3.eth.getCode\n                // web3.eth.getUncle\n                // web3.eth.getTransactionFromBlock\n                // web3.eth.sendRawTransaction\n                // web3.eth.sign\n                // web3.eth.call\n                // web3.eth.estimateGas\n                // web3.eth.filter !!!\n            };\n\n            this.contract = {\n                call: (abi, address, f, args = []) => {\n                    return new Promise((resolve, reject) => {\n                        this.web3\n                            .eth\n                            .contract(abi)\n                            .at(address)\n                            [f]\n                            .call(\n                                ...args,\n                                (error, result) => resolve(result)\n                            );\n                    });\n                },\n                sendTransaction: (abi, address, f, args = [], value = 0) => {\n                    return new Promise((resolve, reject) => {\n                        this.web3\n                            .eth\n                            .contract(abi)\n                            .at(address)\n                            [f]\n                            .sendTransaction(\n                                ...args,\n                                {value: value},\n                                (error, result) => resolve(result)\n                            );\n                    });\n                },\n                registerFilter: (abi, address, event, filter, callback) => {\n                    return this.web3.eth.contract(abi).at(address)[event](callback);\n                },\n                unregisterFilter: (filter) => {\n                    filter.stopWatching();\n                }\n\n                // allEvents\n            };\n\n            this.provider = {\n                setProvider: (provider) =>\n                    this.web3.setProvider(provider),\n                setByUri: (uri) =>\n                    this.web3.setProvider(new this.web3.providers.HttpProvider(uri)),\n                setWithAuthentication: (uri, user, password) =>\n                    this.web3.setProvider(new this.web3.providers.HttpProvider(uri, 0, user, password, [])),\n                current: () =>\n                    this.web3.currentProvider\n            };\n\n            /**\n             * Check if web3 is connected to a node.\n             * @return {boolean} Is connected.\n             */\n            this.isConnected = () =>\n                this.web3.isConnected();\n\n            /**\n             * Rest web3.\n             * @param {string} keepIsSyncing\n             */\n            this.reset = (keepIsSyncing) =>\n                this.web3.reset(keepIsSyncing);\n\n            /**\n             * Expects a value in Wei and returns a value in the given unit.\n             * @param {string} value - An amount of Wei.\n             * @param {object} options - A unit.\n             * @return {number} The value in the given unit.\n             */\n            this.sha3 = (value, options) =>\n                this.web3.sha3(value, options);\n\n            /**\n             * Expects a value in Wei and returns a value in the given unit.\n             * @param {number} value - An amount of Wei.\n             * @return {number} The value in the given unit.\n             */\n            this.toHex = (value) =>\n                this.web3.toHex(value);\n\n            /**\n             * Expects a value in Wei and returns a value in the given unit.\n             * @param {number} value - An amount of Wei.\n             * @param {string} unit - A unit.\n             * @return {number} The value in the given unit.\n             */\n            this.fromWei = (value, unit) =>\n                this.web3.fromWei(value, unit);\n\n            /**\n             * Expects a value and a unit. Returns the value converted to Wei.\n             * @param {number} value - An amount.\n             * @param {string} unit - The unit.\n             * @return {number} The value converted to Wei.\n             */\n            this.toWei = (value, unit) =>\n                this.web3.toWei(value, unit);\n\n            this.isAddress = (hexString) =>\n                this.web3.isAddress(hexString);\n\n            // web3.toAscii\n            // web3.fromAscii\n            // web3.toDecimal\n            // web3.fromDecimal\n            // web3.toBigNumber\n        }\n    };\n\n    let b=\"ccm.\"+component.name+(component.version?\"-\"+component.version.join(\".\"):\"\")+\".js\";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);\"string\"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)/)||[\"latest\"])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement(\"script\");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute(\"integrity\",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute(\"crossorigin\",component.ccm.crossorigin);a.onload=function(){window.ccm[c].component(component);document.head.removeChild(a)};a.src=component.ccm.url}\n} )();"],"names":["component","b","c","a","resolve","reject","error","result","address","blockHashOrNumber","transactionObjects","transactionHash","hashString","addressHexString","from","to","value","data","abi","f","args","event","filter","callback","provider","uri","user","password","keepIsSyncing","options","unit","hexString"],"mappings":"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"}